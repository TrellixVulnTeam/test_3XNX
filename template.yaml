AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  todo-list-aws

  Sample SAM Template for todo-list-aws


Globals:
  Function:
    Timeout: 3
    Environment:
      Variables:
        DYNAMODB_TABLE: !Sub "todosTable-${Stage}"
        ENVIRONMENT: !Ref Stage

Parameters:
  Stage:
    Type: String
    Default: default
    AllowedValues:
      - default
      - staging
      - production
    Description: Introduzca staging o production, el valor por defecto es default

Resources:
  CreateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: create.create
      Runtime: python3.8
      Policies: AWSLambdaDynamoDBExecutionRole
      Events:
        Create:
          Type: Api
          Properties:
            Path: /todos
            Method: post
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:PutItem'
              Resource:
                'Fn::Join':
                  - ''
                  - - 'arn:aws:dynamodb:'
                    - Ref: 'AWS::Region'
                    - ':'
                    - Ref: 'AWS::AccountId'
                    - ':table/todosTable-'
                    - Ref: Stage

  GetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: get.get
      Runtime: python3.8
      Policies: AWSLambdaDynamoDBExecutionRole
      Events:
        Get:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: get
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:GetItem'
              Resource:
                'Fn::Join':
                  - ''
                  - - 'arn:aws:dynamodb:'
                    - Ref: 'AWS::Region'
                    - ':'
                    - Ref: 'AWS::AccountId'
                    - ':table/todosTable-'
                    - Ref: Stage

  ListFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: list.list
      Runtime: python3.8
      Policies: AWSLambdaDynamoDBExecutionRole
      Events:
        List:
          Type: Api
          Properties:
            Path: /todos
            Method: get
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:Scan'
              Resource:
                'Fn::Join':
                  - ''
                  - - 'arn:aws:dynamodb:'
                    - Ref: 'AWS::Region'
                    - ':'
                    - Ref: 'AWS::AccountId'
                    - ':table/todosTable-'
                    - Ref: Stage

  UpdateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: update.update
      Runtime: python3.8
      Policies: AWSLambdaDynamoDBExecutionRole
      Events:
        Update:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: put
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:UpdateItem'
              Resource:
                'Fn::Join':
                  - ''
                  - - 'arn:aws:dynamodb:'
                    - Ref: 'AWS::Region'
                    - ':'
                    - Ref: 'AWS::AccountId'
                    - ':table/todosTable-'
                    - Ref: Stage

  DeleteFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: delete.delete
      Runtime: python3.8
      Policies: AWSLambdaDynamoDBExecutionRole
      Events:
        Delete:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: delete
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:DeleteItem'
              Resource:
                'Fn::Join':
                  - ''
                  - - 'arn:aws:dynamodb:'
                    - Ref: 'AWS::Region'
                    - ':'
                    - Ref: 'AWS::AccountId'
                    - ':table/todosTable-'
                    - Ref: Stage

  TranslateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: translate.get
      Runtime: python3.8
      Policies: AWSLambdaDynamoDBExecutionRole
      Events:
        Get:
          Type: Api
          Properties:
            Path: /todos/{id}/{language}
            Method: get
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:GetItem'
              Resource:
                'Fn::Join':
                  - ''
                  - - 'arn:aws:dynamodb:'
                    - Ref: 'AWS::Region'
                    - ':'
                    - Ref: 'AWS::AccountId'
                    - ':table/todosTable-'
                    - Ref: Stage
            - Effect: Allow
              Action:
                - 'translate:TranslateText'
                - 'comprehend:DetectDominantLanguage'
                - 'comprehend:DetectSentiment'
              Resource: '*'

  todosTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: !Sub "todosTable-${Stage}"
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1



Outputs:
  TodosListApi:
    Description: "API Gateway endpoint URL for Prod stage for TodosList function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  CreateFunction:
    Description: "Create TODO Lambda Function ARN"
    Value: !GetAtt CreateFunction.Arn
  CreateFunctionRole:
    Description: "Implicit IAM Role Create TODO function"
    Value: !GetAtt CreateFunctionRole.Arn
  GetFunction:
    Description: "Get TODO Function ARN"
    Value: !GetAtt GetFunction.Arn
  GetFunctionRole:
    Description: "Implicit IAM Role created for Get TODO function"
    Value: !GetAtt GetFunctionRole.Arn
  ListFunction:
    Description: "List TODO Function ARN"
    Value: !GetAtt GetFunction.Arn
  ListFunctionRole:
    Description: "Implicit IAM Role created for List TODO function"
    Value: !GetAtt GetFunctionRole.Arn
  UpdateFunction:
    Description: "Update TODO Function ARN"
    Value: !GetAtt UpdateFunction.Arn
  UpdateFunctionRole:
    Description: "Implicit IAM Role created for Update TODO function"
    Value: !GetAtt UpdateFunctionRole.Arn
  DeleteFunction:
    Description: "Delete TODO Function ARN"
    Value: !GetAtt DeleteFunction.Arn
  DeleteFunctionRole:
    Description: "Implicit IAM Role created for Translate TODO function"
    Value: !GetAtt DeleteFunctionRole.Arn
  TranslateFunction:
    Description: "Delete TODO Function ARN"
    Value: !GetAtt TranslateFunction.Arn
  TranslateFunctionRole:
    Description: "Implicit IAM Role created for Translate TODO function"
    Value: !GetAtt TranslateFunctionRole.Arn
